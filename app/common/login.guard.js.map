{"version":3,"sources":["common/login.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAEuC,iBAAiB,CAAC,CAAA;AACzD,6BAA4B,gBAAgB,CAAC,CAAA;AAG7C;IACE,uBAAoB,IAAiB,EAAU,MAAe;QAA1C,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAS;IAAG,CAAC;IAElE,mCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAExC,0CAA0C;QAC1C,2CAA2C;QAE3C,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAbH;QAAC,iBAAU,EAAE;;qBAAA;IAcb,oBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,qBAAa,gBAazB,CAAA","file":"common/login.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router,\n         ActivatedRouteSnapshot,\n         RouterStateSnapshot }    from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LoggedInGuard implements CanActivate {\n  constructor(private auth: AuthService, private router : Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.auth.isLogged) { return true; }\n\n    // Store the attempted URL for redirecting\n    //this.authService.redirectUrl = state.url;\n\n    // Navigate to the login page\n    this.router.navigate(['/']);\n    return false;\n  }\n}"],"sourceRoot":"/source/"}