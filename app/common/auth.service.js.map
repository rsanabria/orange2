{"version":3,"sources":["common/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAwB,iBAAiB,CAAC,CAAA;AAC1C,sBAAsB,aAAa,CAAC,CAAA;AAKpC;IAIE,qBAAoB,MAAc,EAAU,KAAkB;QAJhE,iBAwBC;QApBqB,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAa;QAHvD,aAAQ,GAAa,KAAK,CAAC;QAI1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAG,OAAO,CAAC,iDAAiD,CAAC,CAAC,CAAC;gBAClG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;YAEhC,CAAC;QACH,CAAC,CAAC,CAAC;IAEb,CAAC;IACM,2BAAK,GAAZ,UAAa,OAAO;QACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAG,OAAO,EAAC,CAAC,CAAC;IAC5D,CAAC;IACM,4BAAM,GAAb;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAG,EAAE,EAAC,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAvBH;QAAC,iBAAU,EAAE;;mBAAA;IAyBb,kBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,mBAAW,cAwBvB,CAAA","file":"common/auth.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthService {\n  public isLogged : boolean = false;\n  private isLogged$ : Subject<any>;\n  private authStore : Observable<any>;\n  constructor(private router: Router, private store : Store<any>) {\n          this.authStore = store.select('auth');\n            store.subscribe(info => {\n              if (info.auth.isLogged && info.router =='login' /*Esta es ela ruta de donde viene el formulario*/) {\n                this.isLogged = true;\n                this.router.navigateByUrl(info.auth.ruta);\n              } else if (!info.auth.isLogged){\n                //this.router.navigateByUrl('/login');\n              }\n            });\n                      \n  }\n  public login(usuario) {\n     this.store.dispatch({type: 'LOG_IN', payload : usuario});\n  }\n  public logout() {\n    this.store.dispatch({type: 'LOG_OUT', payload : {}});\n    this.isLogged$.next(false);\n  }\n\n}"],"sourceRoot":"/source/"}