{"version":3,"sources":["landing/landing.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAkC,iBAAiB,CAAC,CAAA;AACpD,qCAAqC,sBAAsB,CAAC,CAAA;AAC5D,6BAA4B,wBAAwB,CAAC,CAAA;AACrD,8BAA6B,yBAAyB,CAAC,CAAA;AACvD,sBAAsB,aAAa,CAAC,CAAA;AASpC;IAKI,0BAAqB,KAAkB,EAAU,KAAkB,EAAU,KAAoB;QAA5E,UAAK,GAAL,KAAK,CAAa;QAAU,UAAK,GAAL,KAAK,CAAa;QAAU,UAAK,GAAL,KAAK,CAAe;QAJjG,YAAO,GAAW,EAAE,CAAC;QAKjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,iCAAM,GAAb,UAAe,GAAW;QACtB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;YACX,KAAK,CAAC,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAC3D,KAAK,CAAC,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACzD,KAAK,CAAC,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAC1D,KAAK,CAAC,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC/D,CAAC;IACL,CAAC;IAEM,kCAAO,GAAd;QACI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IAC/C,CAAC;IACO,oCAAS,GAAhB;QACI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IAC/C,CAAC;IACK,iCAAM,GAAb;QACI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAjCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAG,SAAS;YACpB,WAAW,EAAG,gBAAgB;YAC9B,UAAU,EAAE,CAAC,2CAAoB,EAAE,0BAAiB,CAAC;SACxD,CAAC;;wBAAA;IA6BF,uBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,wBAAgB,mBA4B5B,CAAA","file":"landing/landing.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ROUTER_DIRECTIVES } from \"@angular/router\";\nimport { MaterializeDirective } from 'angular2-materialize';\nimport { AuthService } from '../common/auth.service';\nimport { ToastService } from '../common/toast.service';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Rx';\n\n@Component({\n    moduleId: module.id,\n    selector : 'landing',\n    templateUrl : './landing.html',\n    directives: [MaterializeDirective, ROUTER_DIRECTIVES]\n})\nexport class LandingComponent{\n    mensaje: string = \"\";\n    counter;\n    public auth;\n    public isLogged:boolean;\n    constructor( private authS: AuthService, private store : Store<any>, private toast : ToastService) { \n        this.counter = store.select('counter');\n        this.auth = store.select('auth');\n    }\n\n    public toastr (val: number) {\n        switch (val)  {\n            case 0 : this.toast.success('Este es un mensaje Ã©xitoso!');\n            case 1 : this.toast.error('Este es un mensaje de error');\n            case 2 : this.toast.alert('Este es un mensaje de alerta');\n            case 3 : this.toast.info('Este es un mensaje informativo'); \n        }\n    }\n\n    public aumenta () {\n        this.store.dispatch({ type: 'INCREMENT' });\n    }\n     public disminuye () {\n         this.store.dispatch({ type: 'DECREMENT' });\n     }\n    public logout() {\n        this.authS.logout();\n    }\n}"],"sourceRoot":"/source/"}